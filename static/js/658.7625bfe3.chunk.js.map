{"version":3,"file":"static/js/658.7625bfe3.chunk.js","mappings":"6PAEAA,EAAAA,GAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAU,mCAEHC,EAAc,mCAAG,6GAEHF,EAAAA,GAAAA,IAAA,uCAA0CC,IAFvC,cAEpBE,EAFoB,yBAGnBA,EAASC,KAAKC,SAHK,gCAK1BC,QAAQC,IAAR,MAL0B,yDAAH,qDASdC,EAAY,mCAAG,WAAOC,EAASC,EAASC,GAAzB,gGAEDX,EAAAA,GAAAA,IAAA,kBACVS,GADU,OACAC,EAAU,WAAa,IADvB,OAEnBC,EAAU,WAAa,GAFJ,oBAGTV,IALU,cAElBE,EAFkB,yBAOjBA,EAASC,MAPQ,gCASxBE,QAAQC,IAAR,MATwB,yDAAH,0DAaZK,EAAgB,mCAAG,WAAMC,GAAN,gGAELb,EAAAA,GAAAA,IAAA,iCACKC,EADL,kBACsBY,IAHjB,cAEtBV,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,gCAO5BC,QAAQC,IAAR,MAP4B,yDAAH,qD,6ECa7B,UApCmB,WACjB,IAAQE,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAAoCM,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,KACEZ,EAAAA,EAAAA,IAAaC,GAAS,GAAO,GAAMY,MAAK,SAAAjB,GACtCa,EAAcb,EAAKC,QACpB,GAGF,CAFC,MAAOa,GACPC,EAASD,EACV,CACF,GAAE,CAACT,KAGF,2BACGO,EAAWM,OAAS,GACnB,wBACGN,EAAWO,KAAI,SAAAC,GACd,OACE,2BACE,uBAAIA,EAAIC,UACR,uBAAID,EAAIE,YAFDF,EAAIG,GAKhB,OAGH,qDAEDT,GAASA,EAAMU,UAGrB,C","sources":["components/API/API.jsx","components/FilmRewiev/FilmReview.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = 'f0b659a36af27a39ded78e96381ce721';\n\nexport const getTrendMovies = async () => {\n  try {\n    const response = await axios.get(`3/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getMovieById = async (movieId, credits, reviews) => {\n  try {\n    const response = await axios.get(\n      `3/movie/${movieId}${credits ? '/credits' : ''}${\n        reviews ? '/reviews' : ''\n      }?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getMovieBySearch = async query => {\n  try {\n    const response = await axios.get(\n      `3/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import { getMovieById } from 'components/API/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst FilmRewiev = () => {\n  const { movieId } = useParams();\n  const [filmRewiev, setFilmRewiev] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    try {\n      getMovieById(movieId, false, true).then(data => {\n        setFilmRewiev(data.results);\n      });\n    } catch (error) {\n      setError(error);\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      {filmRewiev.length > 0 ? (\n        <ul>\n          {filmRewiev.map(rev => {\n            return (\n              <li key={rev.id}>\n                <p>{rev.author}</p>\n                <p>{rev.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <h3>Sorry, reviews not found</h3>\n      )}\n      {error && error.message}\n    </div>\n  );\n};\n\nexport default FilmRewiev;\n"],"names":["axios","API_KEY","getTrendMovies","response","data","results","console","log","getMovieById","movieId","credits","reviews","getMovieBySearch","query","useParams","useState","filmRewiev","setFilmRewiev","error","setError","useEffect","then","length","map","rev","author","content","id","message"],"sourceRoot":""}