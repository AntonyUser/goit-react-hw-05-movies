{"version":3,"file":"static/js/278.1ca3c4cf.chunk.js","mappings":"6PAEAA,EAAAA,GAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAU,mCAEHC,EAAc,mCAAG,6GAEHF,EAAAA,GAAAA,IAAA,uCAA0CC,IAFvC,cAEpBE,EAFoB,yBAGnBA,EAASC,KAAKC,SAHK,gCAK1BC,QAAQC,IAAR,MAL0B,yDAAH,qDASdC,EAAY,mCAAG,WAAOC,EAASC,EAASC,GAAzB,gGAEDX,EAAAA,GAAAA,IAAA,kBACVS,GADU,OACAC,EAAU,WAAa,IADvB,OAEnBC,EAAU,WAAa,GAFJ,oBAGTV,IALU,cAElBE,EAFkB,yBAOjBA,EAASC,MAPQ,gCASxBE,QAAQC,IAAR,MATwB,yDAAH,0DAaZK,EAAgB,mCAAG,WAAMC,GAAN,gGAELb,EAAAA,GAAAA,IAAA,iCACKC,EADL,kBACsBY,IAHjB,cAEtBV,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,gCAO5BC,QAAQC,IAAR,MAP4B,yDAAH,qD,mEC1B7B,EAA4B,4BAA5B,EAAoE,4B,SCGvDO,EAAa,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACvC,OACE,eAAIC,UAAWC,EAAf,SACGH,EAAWI,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,eAAgBC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YAC3C,OACE,yBACE,UAAC,KAAD,CACEC,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMV,GACfC,UAAWC,EAHb,WAKE,gBACES,IAAG,yCAAoCJ,GACvCK,IAAKR,EACLS,MAAM,QAEPT,GAAkCC,MAX9BC,EAeZ,KAGN,C,+FCqBD,UA3Ce,WACb,OAAwCQ,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMtB,EAAQkB,EAAaK,IAAI,SACzBpB,GAAWqB,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHzB,IAGLD,EAAAA,EAAAA,IAAiBC,GAAO0B,MAAK,SAAAnC,GACvBA,EAAKoC,OAAS,EAChBL,EAAgB/B,GAEhBqC,MAAM,0BAET,GACF,GAAE,CAAC5B,IAaJ,OACE,4BACE,kBAAM6B,SAbY,SAAAC,GAEpB,GADAA,EAAEC,iBACmC,KAAjCD,EAAEE,OAAOC,SAASzB,KAAK0B,MAA3B,CAKA,IAAMlC,EAAQ8B,EAAEE,OAAOC,SAASzB,KAAK0B,MACrCf,EAAgB,CAAEnB,MAAAA,GAHjB,MAFC4B,MAAM,qCAMT,EAIG,WACE,kBAAOpB,KAAK,OAAO2B,KAAK,UACxB,mBAAQA,KAAK,SAAb,uBAEDnC,GAASqB,EAAaM,OAAS,IAC9B,SAAC,IAAD,CAAYzB,WAAYmB,EAAclB,SAAUA,MAIvD,C","sources":["components/API/API.jsx","webpack://react-homework-template/./src/components/MoveLIst/MoveList.module.css?ce12","components/MoveLIst/MoveList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = 'f0b659a36af27a39ded78e96381ce721';\n\nexport const getTrendMovies = async () => {\n  try {\n    const response = await axios.get(`3/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getMovieById = async (movieId, credits, reviews) => {\n  try {\n    const response = await axios.get(\n      `3/movie/${movieId}${credits ? '/credits' : ''}${\n        reviews ? '/reviews' : ''\n      }?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getMovieBySearch = async query => {\n  try {\n    const response = await axios.get(\n      `3/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data.results;\n  } catch (err) {\n    console.log(err);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoveList_movieList__PaFco\",\"movieLink\":\"MoveList_movieLink__Jsdw7\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MoveList.module.css';\n\nexport const MoviesList = ({ moviesData, location }) => {\n  return (\n    <ul className={styles.movieList}>\n      {moviesData.map(({ original_title, name, id, poster_path }) => {\n        return (\n          <li key={id}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              className={styles.movieLink}\n            >\n              <img\n                src={`https://image.tmdb.org/t/p/w400${poster_path}`}\n                alt={original_title}\n                width=\"400\"\n              />\n              {original_title ? original_title : name}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  moviesData: PropTypes.array.isRequired,\n  //   location: PropTypes.object.isRequired,\n};\n","import { useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieBySearch } from 'components/API/API';\nimport { MoviesList } from 'components/MoveLIst/MoveList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMovies, setsearchMovies] = useState([]);\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    getMovieBySearch(query).then(data => {\n      if (data.length > 0) {\n        setsearchMovies(data);\n      } else {\n        alert('Sorry, movies not found');\n      }\n    });\n  }, [query]);\n\n  const HandlerSabmit = e => {\n    e.preventDefault();\n    if (e.target.elements.name.value === '') {\n      alert('Please write the name of the movie');\n      return;\n    }\n\n    const query = e.target.elements.name.value;\n    setSearchParams({ query });\n  };\n\n  return (\n    <div>\n      <form onSubmit={HandlerSabmit}>\n        <input name=\"name\" type=\"text\" />\n        <button type=\"submit\">submit</button>\n      </form>\n      {query && searchMovies.length > 0 && (\n        <MoviesList moviesData={searchMovies} location={location} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","getTrendMovies","response","data","results","console","log","getMovieById","movieId","credits","reviews","getMovieBySearch","query","MoviesList","moviesData","location","className","styles","map","original_title","name","id","poster_path","to","state","from","src","alt","width","useSearchParams","searchParams","setSearchParams","useState","searchMovies","setsearchMovies","get","useLocation","useEffect","then","length","alert","onSubmit","e","preventDefault","target","elements","value","type"],"sourceRoot":""}